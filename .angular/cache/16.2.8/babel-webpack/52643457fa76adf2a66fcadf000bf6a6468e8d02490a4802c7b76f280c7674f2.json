{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nexport class LoginComponent {\n  constructor(router) {\n    this.router = router;\n    this.user = {\n      username: '',\n      password: ''\n    };\n  }\n  onSubmit() {\n    // Aqui você pode adicionar a lógica para fazer uma solicitação de login ao serviço de autenticação.\n    // Você pode usar um serviço de autenticação que lida com a comunicação com o backend.\n    // Exemplo de redirecionamento após um login bem-sucedido:\n    if ( /* Lógica de autenticação bem-sucedida */1 == 1) {\n      this.router.navigate(['/dashboard']); // Redirecionar para a página de dashboard ou para onde desejar.\n    } else {\n      // Lógica para lidar com o login malsucedido, como exibir uma mensagem de erro.\n    }\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 22,\n    vars: 2,\n    consts: [[1, \"container\"], [1, \"row\"], [1, \"col-md-6\", \"offset-md-3\"], [1, \"card\", \"login-card\"], [1, \"card-body\"], [1, \"card-title\"], [3, \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"username\"], [\"type\", \"text\", \"id\", \"username\", \"name\", \"username\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-block\"], [1, \"mt-3\", \"text-center\"], [\"routerLink\", \"/register\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"h2\", 5);\n        i0.ɵɵtext(6, \"Bem-vindo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"form\", 6);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_7_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(8, \"div\", 7)(9, \"label\", 8);\n        i0.ɵɵtext(10, \"Nome de Usu\\u00E1rio\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"input\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_11_listener($event) {\n          return ctx.user.username = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"div\", 7)(13, \"label\", 10);\n        i0.ɵɵtext(14, \"Senha\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"input\", 11);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_15_listener($event) {\n          return ctx.user.password = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"button\", 12);\n        i0.ɵɵtext(17, \"Entrar\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(18, \"p\", 13);\n        i0.ɵɵtext(19, \"N\\u00E3o tem uma conta? \");\n        i0.ɵɵelementStart(20, \"a\", 14);\n        i0.ɵɵtext(21, \"Registrar-se\");\n        i0.ɵɵelementEnd()()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngModel\", ctx.user.username);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.user.password);\n      }\n    },\n    dependencies: [i1.RouterLink, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.NgModel, i2.NgForm],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["LoginComponent","constructor","router","user","username","password","onSubmit","navigate","_","i0","ɵɵdirectiveInject","i1","Router","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LoginComponent_Template_form_ngSubmit_7_listener","LoginComponent_Template_input_ngModelChange_11_listener","$event","LoginComponent_Template_input_ngModelChange_15_listener","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\Usuário\\Projetos\\simdex-web\\src\\app\\login\\login.component.ts","C:\\Users\\Usuário\\Projetos\\simdex-web\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component, NgModule  } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  user = {\n  username: '',\n  password: ''\n  };\n\n  constructor(private router: Router) {}\n\n  onSubmit() {\n    // Aqui você pode adicionar a lógica para fazer uma solicitação de login ao serviço de autenticação.\n    // Você pode usar um serviço de autenticação que lida com a comunicação com o backend.\n\n    // Exemplo de redirecionamento após um login bem-sucedido:\n    if (/* Lógica de autenticação bem-sucedida */ 1 ==1 ) {\n      this.router.navigate(['/dashboard']); // Redirecionar para a página de dashboard ou para onde desejar.\n    } else {\n      // Lógica para lidar com o login malsucedido, como exibir uma mensagem de erro.\n    }\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-6 offset-md-3\">\n        <div class=\"card login-card\">\n          <div class=\"card-body\">\n            <h2 class=\"card-title\">Bem-vindo</h2>\n            <form (ngSubmit)=\"onSubmit()\">\n              <div class=\"form-group\">\n                <label for=\"username\">Nome de Usuário</label>\n                <input type=\"text\" id=\"username\" name=\"username\" [(ngModel)]=\"user.username\" class=\"form-control\" required>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"password\">Senha</label>\n                <input type=\"password\" id=\"password\" name=\"password\" [(ngModel)]=\"user.password\" class=\"form-control\" required>\n              </div>\n              <button type=\"submit\" class=\"btn btn-primary btn-block\">Entrar</button>\n            </form>\n            <p class=\"mt-3 text-center\">Não tem uma conta? <a routerLink=\"/register\">Registrar-se</a></p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  "],"mappings":";;;AAUA,OAAM,MAAOA,cAAc;EAMzBC,YAAoBC,MAAc;IAAd,KAAAA,MAAM,GAANA,MAAM;IAL1B,KAAAC,IAAI,GAAG;MACPC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE;KACT;EAEoC;EAErCC,QAAQA,CAAA;IACN;IACA;IAEA;IACA,KAAI,yCAA0C,CAAC,IAAG,CAAC,EAAG;MACpD,IAAI,CAACJ,MAAM,CAACK,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;KACvC,MAAM;MACL;IAAA;EAEJ;EAAC,QAAAC,CAAA,G;qBAlBUR,cAAc,EAAAS,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAdb,cAAc;IAAAc,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCV3BX,EAAA,CAAAa,cAAA,aAAuB;QAKYb,EAAA,CAAAc,MAAA,gBAAS;QAAAd,EAAA,CAAAe,YAAA,EAAK;QACrCf,EAAA,CAAAa,cAAA,cAA8B;QAAxBb,EAAA,CAAAgB,UAAA,sBAAAC,iDAAA;UAAA,OAAYL,GAAA,CAAAf,QAAA,EAAU;QAAA,EAAC;QAC3BG,EAAA,CAAAa,cAAA,aAAwB;QACAb,EAAA,CAAAc,MAAA,4BAAe;QAAAd,EAAA,CAAAe,YAAA,EAAQ;QAC7Cf,EAAA,CAAAa,cAAA,gBAA2G;QAA1Db,EAAA,CAAAgB,UAAA,2BAAAE,wDAAAC,MAAA;UAAA,OAAAP,GAAA,CAAAlB,IAAA,CAAAC,QAAA,GAAAwB,MAAA;QAAA,EAA2B;QAA5EnB,EAAA,CAAAe,YAAA,EAA2G;QAE7Gf,EAAA,CAAAa,cAAA,cAAwB;QACAb,EAAA,CAAAc,MAAA,aAAK;QAAAd,EAAA,CAAAe,YAAA,EAAQ;QACnCf,EAAA,CAAAa,cAAA,iBAA+G;QAA1Db,EAAA,CAAAgB,UAAA,2BAAAI,wDAAAD,MAAA;UAAA,OAAAP,GAAA,CAAAlB,IAAA,CAAAE,QAAA,GAAAuB,MAAA;QAAA,EAA2B;QAAhFnB,EAAA,CAAAe,YAAA,EAA+G;QAEjHf,EAAA,CAAAa,cAAA,kBAAwD;QAAAb,EAAA,CAAAc,MAAA,cAAM;QAAAd,EAAA,CAAAe,YAAA,EAAS;QAEzEf,EAAA,CAAAa,cAAA,aAA4B;QAAAb,EAAA,CAAAc,MAAA,gCAAmB;QAAAd,EAAA,CAAAa,cAAA,aAA0B;QAAAb,EAAA,CAAAc,MAAA,oBAAY;QAAAd,EAAA,CAAAe,YAAA,EAAI;;;QARpCf,EAAA,CAAAqB,SAAA,IAA2B;QAA3BrB,EAAA,CAAAsB,UAAA,YAAAV,GAAA,CAAAlB,IAAA,CAAAC,QAAA,CAA2B;QAIvBK,EAAA,CAAAqB,SAAA,GAA2B;QAA3BrB,EAAA,CAAAsB,UAAA,YAAAV,GAAA,CAAAlB,IAAA,CAAAE,QAAA,CAA2B"},"metadata":{},"sourceType":"module","externalDependencies":[]}